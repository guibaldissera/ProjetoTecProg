CLASS: Object

METHODS:
    Object(Object *parent = nullptr, ObjectID id = "", double x = 0, double y = 0, double w = 1, double h = 1);
    virtual ~Object();
    Object * parent() const;
    ObjectID id() const;
    const list<Object *>& children() const;
    const Rect& bounding_box() const;
    void set_x(double x);
    void set_y(double y);
    void set_w(double w);
    void set_h(double h);
    void set_visible(bool visible = true);
    void set_position(double x, double y);
    void set_dimensions(double w, double h);
    void set_parent(Object *parent);
    void align_to(const Object* object, Alignment xaxis, Alignment yaxis);
    void add_child(Object *child);
    void remove_child(Object *child);
    void add_observer(Object *observer);
    void remove_observer(Object *observer);
    void notify(ActionID action, Parameters parameters);
    void update(unsigned long elapsed);
    void draw();
	virtual void update_self(unsigned long elapsed);
    virtual void draw_self();
    bool visible() const;
    bool send_message(Object *receiver, MessageID id, Parameters parameters);
    virtual bool on_message(Object *sender, MessageID id, Parameters p);
    double x() const;
    double y() const;
    double w() const;
    double h() const;
	
ATTRIBUTES:
	typedef enum { NONE, LEFT, CENTER, RIGHT, TOP, MIDDLE, BOTTOM } Alignment;
	Object *m_base;
    Object *m_parent;
    ObjectID m_id;
    Rect m_box;
	class Impl;
    unique_ptr<Impl> m_impl;
    bool m_visible;
    list<Object *> m_children;
    list<Object *> m_observers;
